// Generated by jextract

package com.juanmuscaria.foreign.enet;

import java.lang.invoke.VarHandle;
import java.lang.foreign.*;

/**
 * {@snippet :
 * struct _ENetProtocolAcknowledge {
 *     ENetProtocolCommandHeader header;
 *     enet_uint16 receivedReliableSequenceNumber;
 *     enet_uint16 receivedSentTime;
 * };
 * }
 */
public class _ENetProtocolAcknowledge {

    public static MemoryLayout $LAYOUT() {
        return constants$81.const$3;
    }
    public static MemorySegment header$slice(MemorySegment seg) {
        return seg.asSlice(0, 4);
    }
    public static VarHandle receivedReliableSequenceNumber$VH() {
        return constants$81.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * enet_uint16 receivedReliableSequenceNumber;
     * }
     */
    public static short receivedReliableSequenceNumber$get(MemorySegment seg) {
        return (short)constants$81.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * enet_uint16 receivedReliableSequenceNumber;
     * }
     */
    public static void receivedReliableSequenceNumber$set(MemorySegment seg, short x) {
        constants$81.const$4.set(seg, x);
    }
    public static short receivedReliableSequenceNumber$get(MemorySegment seg, long index) {
        return (short)constants$81.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void receivedReliableSequenceNumber$set(MemorySegment seg, long index, short x) {
        constants$81.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static VarHandle receivedSentTime$VH() {
        return constants$81.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * enet_uint16 receivedSentTime;
     * }
     */
    public static short receivedSentTime$get(MemorySegment seg) {
        return (short)constants$81.const$5.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * enet_uint16 receivedSentTime;
     * }
     */
    public static void receivedSentTime$set(MemorySegment seg, short x) {
        constants$81.const$5.set(seg, x);
    }
    public static short receivedSentTime$get(MemorySegment seg, long index) {
        return (short)constants$81.const$5.get(seg.asSlice(index*sizeof()));
    }
    public static void receivedSentTime$set(MemorySegment seg, long index, short x) {
        constants$81.const$5.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


