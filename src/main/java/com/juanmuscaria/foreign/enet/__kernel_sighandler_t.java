// Generated by jextract

package com.juanmuscaria.foreign.enet;

import java.lang.foreign.*;

/**
 * {@snippet :
 * void (*__kernel_sighandler_t)(int);
 * }
 */
public interface __kernel_sighandler_t {

    void apply(int _x0);
    static MemorySegment allocate(__kernel_sighandler_t fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$41.const$5, fi, constants$15.const$0, scope);
    }
    static __kernel_sighandler_t ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (int __x0) -> {
            try {
                constants$42.const$0.invokeExact(symbol, __x0);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


