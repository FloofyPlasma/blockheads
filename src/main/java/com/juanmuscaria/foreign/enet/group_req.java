// Generated by jextract

package com.juanmuscaria.foreign.enet;

import java.lang.invoke.VarHandle;
import java.lang.foreign.*;

/**
 * {@snippet :
 * struct group_req {
 *     uint32_t gr_interface;
 *     struct sockaddr_storage gr_group;
 * };
 * }
 */
public class group_req {

    public static MemoryLayout $LAYOUT() {
        return constants$51.const$3;
    }
    public static VarHandle gr_interface$VH() {
        return constants$51.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * uint32_t gr_interface;
     * }
     */
    public static int gr_interface$get(MemorySegment seg) {
        return (int)constants$51.const$4.get(seg);
    }
    /**
     * Setter for field:
     * {@snippet :
     * uint32_t gr_interface;
     * }
     */
    public static void gr_interface$set(MemorySegment seg, int x) {
        constants$51.const$4.set(seg, x);
    }
    public static int gr_interface$get(MemorySegment seg, long index) {
        return (int)constants$51.const$4.get(seg.asSlice(index*sizeof()));
    }
    public static void gr_interface$set(MemorySegment seg, long index, int x) {
        constants$51.const$4.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment gr_group$slice(MemorySegment seg) {
        return seg.asSlice(8, 128);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


