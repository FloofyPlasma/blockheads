// Generated by jextract

package com.juanmuscaria.foreign.enet;

import java.lang.foreign.*;

/**
 * {@snippet :
 * struct in6_addr {
 *     union  __in6_u;
 * };
 * }
 */
public class in6_addr {

    public static MemoryLayout $LAYOUT() {
        return constants$48.const$3;
    }
    /**
     * {@snippet :
     * union {
     *     uint8_t __u6_addr8[16];
     *     uint16_t __u6_addr16[8];
     *     uint32_t __u6_addr32[4];
     * };
     * }
     */
    public static final class __in6_u {

        // Suppresses default constructor, ensuring non-instantiability.
        private __in6_u() {}
        public static MemoryLayout $LAYOUT() {
            return constants$48.const$4;
        }
        public static MemorySegment __u6_addr8$slice(MemorySegment seg) {
            return seg.asSlice(0, 16);
        }
        public static MemorySegment __u6_addr16$slice(MemorySegment seg) {
            return seg.asSlice(0, 16);
        }
        public static MemorySegment __u6_addr32$slice(MemorySegment seg) {
            return seg.asSlice(0, 16);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
        public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
            return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
        }
        public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
    }

    public static MemorySegment __in6_u$slice(MemorySegment seg) {
        return seg.asSlice(0, 16);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena arena) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, arena); }
}


